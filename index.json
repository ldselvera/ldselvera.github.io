[{"categories":null,"contents":"Abstract\nThreat detection and forensics have become an imperative component in every digital forensic triage. Supervised approaches have been proposed for inferring system and network anomalies; including anomaly detection contributions using syslogs. Nevertheless, most works downplay the importance of the interpretability of a model\u0026rsquo;s decision-making process. In this research, we are among the first to propose an interpretable federated transformer log learning model for threat detection supporting explainable cyber forensics. The proposed model is generated by training a local transformer-based threat detection model at each client in an organizational unit. Local models at each client learn the system\u0026rsquo;s normal behavior from the syslogs which keep records of execution flows. Subsequently, a federated learning server aggregates the learned model parameters from local models to generate a global federated learning model. Log time-series capturing normal behavior are expected to differ from those possessing cyber threat activity. We demonstrate this difference through a goodness of fit test based on Karl-Pearson\u0026rsquo;s Chi-square statistic. To provide insights on actions triggering this difference, we integrate an attention-based interpretability module. We implement and evaluate our proposed model using HDFS, a publicly available log dataset, and an in-house collected and publicly released dataset named CTDD, which consists of more than 8 million syslogs representing cloud collaboration services and systems compromised by different classes of cyber threats. Moreover, through different experiments, we demonstrate the log agnostic capability and applicability of our approach on a real-world operational setting. Our interpretability module manifests significant attention difference between normal and abnormal logs which provide insightful interpretability of the model\u0026rsquo;s decision-making process. Finally, we deem the obtained results as a validation for the appropriate adoption of our approach in achieving threat forensics in the real world.\n","permalink":"https://ldselvera.github.io/publications/tad/","tags":null,"title":"Interpretable Federated Transformer Log Learning for Threat Forensics"},{"categories":null,"contents":"Abstract\nHuman behavior is a reflection of brain activity, and brain disorders often result in abnormal behavior. Traditionally, interventions for brain disorders focus on either behavior, such as psychotherapy, or brain (e.g. medication, surgery), but not both. There are benefits of utilizing both brain and behavior modalities, such as early detection, treatment monitoring, and use of precision medicine to take into account individual differences. However, the central challenge in multimodal behavior and neurocognitive learning involves learning representations that can process and relate information from both modalities. In this study, we examine adults who stutter (AWS) as a testbed to use Artificial Intelligence (AI) algorithms to infer the hidden state of brain processes based on subtle observable behavior. The speech in AWS is sometimes normal, and on other occasions clearly abnormal. This dichotomy allows for classification of two behavioral states that may be related to their respective underlying brain states. By designing a sequence-to-sequence attention model, we learn the correlations between internal neurocognitive states and external facial muscle movements as AWS subjects are about to speak. We denoise and quantize the EEG signals and use the facial muscle movement sequences to predict these quantized EEG sequences. Additionally, the trained attention weights shed light into the correlations between specific brain regions and facial muscle group activity. We validate our methodology by carrying out a comprehensive study using a controlled experimental speech-behavior paradigm and by collecting the first real-world synchronized EEG and face multimodal dataset of AWS subjects. We found strong correlations among upper and lower facial regions to left-temporal and bilateral frontal brain regions. Interestingly, the brain regions identified are also the same regions that differ both structurally and functionally between people who stutter and fluent controls.\n","permalink":"https://ldselvera.github.io/publications/tsd/","tags":null,"title":"Quantized Spectral Clustering with Seq2Seq Attention Model to Predict Cognitive State from Behavior Variables"},{"categories":null,"contents":"This talk looked at Liberty Mutual’s transformation to Continuous Integration, Continuous Delivery, and DevOps. For a large, heavily regulated industry, this task can not only be daunting, but viewed by many as impossible. Often, organizations try to reduce the friction through micro-fixes, but Eddie’s team asked how to change the culture to reduce the friction and concluded with the following final points:\n Don’t mandate DevOps. Give employees the chance to master their discipline with examples to set and follow. Favor deep end-to-end accomplishments over broad but incremental steps forward. Focus on taking the right teams far before encouraging broad adoption. Centralize the platforms and tools that your teams shouldn’t be thinking about. Provide foundational services/commodities and let teams stay on purpose. Incorporate contributions from everyone; don’t stifle autonomy. Stay open to new ways of working. Challenge security policies, but respect intentions. Find new ways to enforce concerns without abandoning precaution.  ","permalink":"https://ldselvera.github.io/publications/nids/","tags":null,"title":"A Multivariate Time Series Representation Learning on Zeek Logs for Network Anomaly Detection"},{"categories":null,"contents":"•\tWorked in team of 7 implementing data pipeline to process unstructured text data from Twitter and Google\n•\tDeveloped data preprocessing and analytics modules to cleanse and gain insight from collected dataset\n•\tDeveloping text classification sentiment analysis deployed on website using Django web framework\n","permalink":"https://ldselvera.github.io/projects/creations/covid/","tags":null,"title":"Tracking Covid-19 through Social Media using Sentiment Analysis"},{"categories":null,"contents":"Intro Doesn\u0026rsquo;t matter whether it\u0026rsquo;s a CakePHP app for a client, your own personal CMS, or any other web based application. If your passing around passwords or other sensitive info you should really implement SSL. SSL provides 2 main perks to your visitors.\n First it encrypts all communication that flies across the web. This prevents curious or devious billies from getting your secrets. Secondly it ensures to the user that your server is in fact who it claims, and not a nasty \u0026lsquo;man in the middle\u0026quot; attack. Finally it gives your site that touch of class\u0026hellip;. which of course a classy person like yourself relies on.  Once you implement SSL certificates on your server you\u0026rsquo;ll want to require secure connections using Apache\u0026rsquo;s rewrite module. Now I won\u0026rsquo;t dwell on the creation and signing of certificates, its already well documented. If your just starting out though,heres a few links I recommend;\n Creating self-signed certificates (free, but should only be used internally or for testing, users will; see an \u0026lsquo;Untrusted\u0026quot; warning) Requesting a CA Signed certificate (not free, but the final certificate is trusted and seamless for users)  The second link uses the schools internal CA, you will need to pay a public CA like Entrust or Verisign. All of this information is aimed at \u0026lsquo;nix or solaris servers running apache. Why? cause a production windows server is laughable :-p\nNow that you have a certificate, whats next? So there you are you have a shiny new Certificate and Server key, how do you force visitors to your apache driven site to use the SSL? You copied the certificates into the appropite locations right? And you have made the needed changes in httpd.conf right? So now when you view https://example.com you see a \u0026lsquo;trusted\u0026rsquo; warning or your site right? If No to any of these than this article does a pretty good job of outlining those steps.\nThe SSL Works, How do I force connections to use it? First you need to decide if you want to force every page on your site to use SSL, or only a particular sub-domain, or maybe just your admin directory. Since the overhead is minimal there is no harm is forcing the entire domain to leverage SSL, but if it is a self-signed certificate for your personal use than you\u0026rsquo;ll most certainly want to restrict its use to your own areas. This prevents users from seeing that nasty warning \u0026ldquo;This server is not trusted\u0026rdquo; You\u0026rsquo;ll know if your using SSL because the url prefix changes from http to https (s for secure).\nForcing entire domain to use SSL You want any visit, any where to use ssl. This probably the simplest solution. Create or append to your htaccess file in the top directory of your server. Some people use a port check (80 is typically http, while 443 is https) but if you have alernate configs or the user just adds :8080 to the end of the url this method is useless. Instead check whether the https environmental variable is set, if not then redirect.\nRewriteCond %{HTTPS} !=on RewriteRule ^(.*)$ https://%{SERVER_NAME}$1 \\[R,L\\] Forcing sub-domains to use SSL Maybe you only want mysecretarea.example.com to use SSL, that\u0026rsquo;s easy enough. Its the same premise as above, but you move the htaccess file into the directory that corresponds to the subdomain. Also change the second line like below;\nRewriteCond %{HTTPS} !=on RewriteRule ^(.*)$ https://mysecretarea.%{SERVER_NAME}$1 \\[R,L\\] Forcing a directory to use SSL This method cn get a little hairier if your using aliases or redirects on top of this one. You\u0026rsquo;ll need to consider what order the commands are read. The basic principle is like so. You want all visits to example.com/admin to use ssl. Create a htaccess file in the parent directory. Again will check for the https variable, but this time we also check for the sub-directory to be in the path.\nRewriteCond %{HTTPS} !=on RewriteRule ^/admin/(.*)$ https://%{SERVER_NAME}/admin/$1 \\[R,L\\] ","permalink":"https://ldselvera.github.io/blog/force-ssl/","tags":null,"title":"Forcing Visits to use SSL"},{"categories":null,"contents":"•\tImplemented deep learning solution to detecting credit card frauds using sequential ED-TCN model\n•\tDeveloped model using Keras achieving a 96% accuracy\n•\tPresented project in RowdyHacks Hackathon workshop session with 40 attendees\n","permalink":"https://ldselvera.github.io/projects/creations/fraud/","tags":null,"title":"Fraud Detection using Encoder-Decoder Temporal Convolutional Network (ED-TCN)"},{"categories":null,"contents":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml\n[outputs] home = [\u0026#34;HTML\u0026#34;, \u0026#34;JSON\u0026#34;] Searching additional fileds To search additional fields defined in front matter, you must add it in 2 places.\n","permalink":"https://ldselvera.github.io/search/","tags":null,"title":"Search Results"},{"categories":null,"contents":"•\tDeveloped Bidirectional-LSTM model to detect improper questions using datasets from Q\u0026amp;A forums\n•\tDeployed model on website using Flask web framework for users to input their questions for classifications\n•\tDeveloped model using Pytorch achieving a 97% classification accuracy\n","permalink":"https://ldselvera.github.io/projects/creations/tutor/","tags":null,"title":"Text-based Classification of Questions on Q\u0026A Forums using Bi-LSTM"},{"categories":null,"contents":"•\tImplemented deep learning solution to detecting trolls online using sequential BERT model for classification\n•\tBuilt website that uses model to detect trolls on forums websites allowing users to input the posts\n•\tDeveloped model using Pytorch and deployed on website using Flask web framework\n","permalink":"https://ldselvera.github.io/projects/creations/trolls/","tags":null,"title":"Trolls Detector using Bidirectional Encoder Representations from Transformers (BERT)"},{"categories":null,"contents":"•\tBuilt a software application for tutoring services using Java and MySQL\n•\tApplied software engineering principles, Agile Method, and software design patter model-view-controller (MVC)\n•\tAllows tutors and students to manage tutoring sessions and give a visual organization of the collected information\n","permalink":"https://ldselvera.github.io/projects/creations/question/","tags":null,"title":"Tutor Tools Software"}]